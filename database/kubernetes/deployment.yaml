apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: postgres
  name: postgres
  namespace: database
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  strategy: {}
  template:
    metadata:
      labels:
        app: postgres
    spec:
      # Pod wide security settings:
			# TODO: See the section on running Postgres as an
      # arbitrary user in the docs for the official image:
      # https://hub.docker.com/_/postgres
      # securityContext:
      #   runAsUser: 1000
      #   runAsGroup: 1000
      #   fsGroup: 1000
      #   runAsNonRoot: true
      containers:
      - image: postgres
        name: postgres
        env:
        - name: POSTGRES_USER
          value: bugbounty
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: database
              key: POSTGRES_PASSWORD
        - name: API_USER
          valueFrom:
            secretKeyRef:
              name: database
              key: API_USER
        - name: API_PASSWORD
          valueFrom:
            secretKeyRef:
              name: database
              key: API_PASSWORD
        # Container specific security settings:
        securityContext:
          # No new privs for process or it's children
          # https://github.com/kubernetes/design-proposals-archive/blob/main/auth/no-new-privs.md
          allowPrivilegeEscalation: false
        volumeMounts:
        - name: initdb
          mountPath: /docker-entrypoint-initdb.d/init-user-db.sh
          subPath: init-user-db.sh
      volumes:
        - name: initdb
          configMap:
            name: initdb
status: {}
